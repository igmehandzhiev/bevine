{"version":3,"sources":["graphics/logo_white.png","services/Fetch.js","components/CustomizedChartLabel.jsx","components/MildewChart.jsx","components/GaugeWrapper.jsx","components/HumiditySensor.jsx","components/TemperatureSensor.jsx","components/MoistureSensor.jsx","components/RadialChart.jsx","components/RadialChartWrapper.jsx","components/MildewIndex.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Fetch","url","settings","Promise","resolve","reject","fetch","concat","Object","assign","credentials","then","response","catch","error","CustomizedChartLabel","_this$props","this","props","x","y","value","react_default","a","createElement","dy","dx","fill","fillColor","fontSize","textAnchor","PureComponent","MildewChart","_React$Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","titleProps","index","newIndex","state","activeIndex","setState","data","name","temperature","humidity","moisture","inherits","createClass","key","_this$state","Accordion","styled","Title","active","onClick","Icon","Content","es6","width","height","strokeDasharray","dataKey","label","angle","position","type","stroke","components_CustomizedChartLabel","React","Component","GaugeWrapper","_this$props$header","header","_this$props$height","_this$props$width","_this$props$value","className","_this$props$color","color","_this$props$min","min","_this$props$max","max","valueFormatter","Card","raised","fluid","textAlign","Header","Gauge_default","HumiditySensor","_this2","setInterval","Math","random","fetchHumidity","_this3","redirect","json","status","colorHex","getHexColor","components_GaugeWrapper","TemperatureSensor","fetchTemperature","MoistureSensor","fetchMoisture","RadialChart","componentWillReceiveProps","nextProps","series","undefined","_this$props$startAngl","startAngle","_this$props$endAngle","endAngle","_this$props$valueFont","valueFontSize","options","plotOptions","radialBar","track","background","strokeWidth","margin","shadow","enabled","top","left","opacity","blur","dataLabels","show","offsetY","colors","gradient","shade","shadeIntensity","inverseColors","stops","id","react_apexcharts_min_default","RadialChartWrapper","components_RadialChart","MildewIndex","fetchMildewData","components_RadialChartWrapper","App","Container","Menu","fixed","size","inverted","Image","src","logo","alt","Item","fitted","Grid","container","centered","Row","columns","Column","HumiditySensor_HumiditySensor","TemperatureSensor_TemperatureSensor","MoistureSensor_MoistureSensor","components_MildewIndex","Divider","MildewChart_MildewChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6561ce38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.84bb471c.png\";","class Fetch {\r\n  static redirect(url, settings) {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `http://localhost:8000${url}`,\r\n        Object.assign(\r\n          {\r\n            credentials: \"same-origin\"\r\n          },\r\n          settings\r\n        )\r\n      )\r\n        .then(response => {\r\n          resolve(response);\r\n        })\r\n        .catch(error => {\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport { Fetch };\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass CustomizedChartLabel extends PureComponent {\r\n  static fillColor(value) {\r\n    if (value < 13) {\r\n      return \"green\";\r\n    }\r\n    if (value < 25) {\r\n      return \"blue\";\r\n    }\r\n    return \"red\";\r\n  }\r\n\r\n  render() {\r\n    const { x, y, value } = this.props;\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        dy={-9}\r\n        dx={-5}\r\n        fill={CustomizedChartLabel.fillColor(value)}\r\n        fontSize={13}\r\n        textAnchor=\"middle\"\r\n      >\r\n        {value}\r\n      </text>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedChartLabel;\r\n","import React from \"react\";\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from \"recharts\";\r\nimport { Accordion, Icon } from \"semantic-ui-react\";\r\nimport { Fetch } from \"../services/Fetch\";\r\nimport CustomizedChartLabel from \"./CustomizedChartLabel\";\r\n\r\nexport class MildewChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        { name: \"05/06\", temperature: 12, humidity: 61, moisture: 70 },\r\n        { name: \"06/06\", temperature: 15, humidity: 54, moisture: 65 },\r\n        { name: \"07/06\", temperature: 17, humidity: 61, moisture: 53 },\r\n        { name: \"08/06\", temperature: 22, humidity: 50, moisture: 41 },\r\n        { name: \"09/06\", temperature: 26, humidity: 79, moisture: 63 }\r\n      ]\r\n    };\r\n  }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  render() {\r\n    const { data, activeIndex } = this.state;\r\n    return (\r\n      <Accordion styled>\r\n        <Accordion.Title\r\n          active={activeIndex === 0}\r\n          index={0}\r\n          onClick={this.handleClick}\r\n        >\r\n          <Icon name=\"dropdown\" />\r\n          History Data\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndex === 0}>\r\n          <LineChart width={500} height={300} data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" height={60} />\r\n            <YAxis\r\n              label={{\r\n                value: \"Mildew Index\",\r\n                angle: -90,\r\n                position: \"insideLeft\",\r\n                textAnchor: \"middle\"\r\n              }}\r\n            />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"natural\"\r\n              dataKey=\"temperature\"\r\n              stroke=\"#653887\"\r\n              label={<CustomizedChartLabel />}\r\n            />\r\n            <Line\r\n              type=\"natural\"\r\n              dataKey=\"humidity\"\r\n              stroke=\"#134857\"\r\n              label={<CustomizedChartLabel />}\r\n            />\r\n            <Line\r\n              type=\"natural\"\r\n              dataKey=\"moisture\"\r\n              stroke=\"#1284d0\"\r\n              label={<CustomizedChartLabel />}\r\n            />\r\n          </LineChart>\r\n        </Accordion.Content>\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MildewChart;\r\n","import React from \"react\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport Gauge from \"react-svg-gauge\";\r\n\r\nclass GaugeWrapper extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      header = \"DATA\",\r\n      height = 160,\r\n      width = 200,\r\n      value = 0,\r\n      className,\r\n      color = \"green\",\r\n      min = 0,\r\n      max = 100,\r\n      valueFormatter\r\n    } = this.props;\r\n    return (\r\n      <Card raised fluid className={className}>\r\n        <Card.Content textAlign=\"center\">\r\n          <Card.Header>{header}</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content fluid textAlign=\"center\">\r\n          <Gauge\r\n            value={value}\r\n            width={width}\r\n            height={height}\r\n            label=\"\"\r\n            color={color}\r\n            min={min}\r\n            max={max}\r\n            valueFormatter={valueFormatter}\r\n          />\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GaugeWrapper;\r\n","import React from \"react\";\r\nimport { Fetch } from \"../services/Fetch\";\r\nimport GaugeWrapper from \"./GaugeWrapper\";\r\n\r\nconst getHexColor = value => {\r\n  if (value < 49) {\r\n    return \"#77be47\";\r\n  }\r\n  if (value < 69) {\r\n    return \"#beba11\";\r\n  }\r\n  return \"#b42400\";\r\n};\r\n\r\nexport class HumiditySensor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      const value = Math.random() * 100;\r\n      this.fetchHumidity();\r\n    }, 3000);\r\n  }\r\n\r\n  fetchHumidity() {\r\n    Fetch.redirect(\"/data/humidity\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.status !== 403) {\r\n          this.setState({\r\n            value: data\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const colorHex = `${getHexColor(value)}`;\r\n    return (\r\n      <GaugeWrapper\r\n        value={value}\r\n        width={200}\r\n        height={160}\r\n        header=\"HUMIDITY\"\r\n        color={colorHex}\r\n        min={0}\r\n        max={100}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HumiditySensor;\r\n","import React from \"react\";\r\nimport { Fetch } from \"../services/Fetch\";\r\nimport GaugeWrapper from \"./GaugeWrapper\";\r\n\r\nconst getHexColor = value => {\r\n  if (value < 13) {\r\n    return \"#00a191\";\r\n  }\r\n  if (value < 37) {\r\n    return \"#77be47\";\r\n  }\r\n  return \"#b42400\";\r\n};\r\n\r\nexport class TemperatureSensor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      const value = Math.random() * 100;\r\n      this.setState({\r\n        value: this.fetchTemperature()\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  fetchTemperature() {\r\n    Fetch.redirect(\"/data/temperature\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.status !== 403) {\r\n          this.setState({\r\n            value: data\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const colorHex = `${getHexColor(value)}`;\r\n    return (\r\n      <GaugeWrapper\r\n        value={value}\r\n        width={200}\r\n        height={160}\r\n        header=\"TEMPERATURE\"\r\n        color={colorHex}\r\n        min={0}\r\n        max={49}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TemperatureSensor;\r\n","import React from \"react\";\r\nimport { Fetch } from \"../services/Fetch\";\r\nimport GaugeWrapper from \"./GaugeWrapper\";\r\n\r\nconst getHexColor = value => {\r\n  if (value < 0.7) {\r\n    return \"#77be47\";\r\n  }\r\n  return \"#e79419\";\r\n};\r\n\r\nexport class MoistureSensor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      const value = Math.random();\r\n      this.setState({\r\n        value: this.fetchMoisture()\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  fetchMoisture() {\r\n    Fetch.redirect(\"/api/moisture\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.status !== 403) {\r\n          this.setState({\r\n            value: data\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const colorHex = `${getHexColor(value)}`;\r\n    return (\r\n      <GaugeWrapper\r\n        value={value}\r\n        width={200}\r\n        height={160}\r\n        header=\"MOISTURE\"\r\n        color={colorHex}\r\n        min={0}\r\n        max={1}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoistureSensor;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass RadialChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      startAngle = 0,\r\n      endAngle = 360,\r\n      value = 33,\r\n      height = 160,\r\n      valueFontSize = \"30px\"\r\n    } = this.props;\r\n    this.state = {\r\n      options: {\r\n        plotOptions: {\r\n          radialBar: {\r\n            startAngle,\r\n            endAngle,\r\n            track: {\r\n              background: \"#e7e7e7\",\r\n              strokeWidth: \"97%\",\r\n              margin: 5, // margin is in pixels\r\n              shadow: {\r\n                enabled: true,\r\n                top: 2,\r\n                left: 0,\r\n                color: \"#999\",\r\n                opacity: 1,\r\n                blur: 2\r\n              }\r\n            },\r\n            dataLabels: {\r\n              name: {\r\n                show: false\r\n              },\r\n              value: {\r\n                offsetY: 20,\r\n                fontSize: valueFontSize\r\n              }\r\n            }\r\n          }\r\n        },\r\n        fill: {\r\n          colors: [\r\n            data => {\r\n              // eslint-disable-next-line no-shadow\r\n              const { value } = data;\r\n              if (value < 33) {\r\n                return \"#73d33d\";\r\n              }\r\n              if (value < 77) {\r\n                return \"#b4c028\";\r\n              }\r\n              return \"#8a1d00\";\r\n            }\r\n          ],\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shade: \"light\",\r\n            shadeIntensity: 0.2,\r\n            inverseColors: false,\r\n            stops: [0, 33, 77]\r\n          }\r\n        }\r\n      },\r\n      series: [value],\r\n      height\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    const { value } = nextProps;\r\n    this.setState({\r\n      series: [value === undefined ? 0 : value]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { series, options, height } = this.state;\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={options}\r\n          series={series}\r\n          type=\"radialBar\"\r\n          height={height}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RadialChart;\r\n","import React from \"react\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport RadialChart from \"./RadialChart\";\r\n\r\nclass RadialChartWrapper extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      header,\r\n      endAngle,\r\n      height,\r\n      startAngle,\r\n      value,\r\n      valueFontSize,\r\n      className\r\n    } = this.props;\r\n    return (\r\n      <Card raised fluid className={className}>\r\n        <Card.Content>\r\n          <Card.Header>{header}</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content fluid>\r\n          <RadialChart\r\n            startAngle={startAngle}\r\n            endAngle={endAngle}\r\n            height={height}\r\n            value={value}\r\n            valueFontSize={valueFontSize}\r\n          />\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RadialChartWrapper;\r\n","import React from \"react\";\r\nimport RadialChartWrapper from \"./RadialChartWrapper\";\r\nimport { Fetch } from \"../services/Fetch\";\r\n\r\nclass MildewIndex extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      const value = Math.random() * 100;\r\n      this.setState({\r\n        value: this.fetchMildewData()\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  fetchMildewData() {\r\n    Fetch.redirect(\"/data/downyMildewIndex\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.status !== 403) {\r\n          this.setState({\r\n            value: data\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <RadialChartWrapper\r\n        className=\"mildew\"\r\n        header=\"MILDEW INDEX\"\r\n        // startAngle={0}\r\n        // endAngle={180}\r\n        value={value}\r\n        height={350}\r\n        valueFontSize=\"72px\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MildewIndex;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Image,\r\n  Grid,\r\n  Divider,\r\n  Menu,\r\n  Card,\r\n  Accordion,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport logo from \"./graphics/logo_white.png\";\r\nimport \"./css/App.css\";\r\nimport { MildewChart } from \"./components/MildewChart\";\r\nimport { HumiditySensor } from \"./components/HumiditySensor\";\r\nimport { TemperatureSensor } from \"./components/TemperatureSensor\";\r\nimport { MoistureSensor } from \"./components/MoistureSensor\";\r\nimport MildewIndex from \"./components/MildewIndex\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Menu\r\n        className=\"nav-bar\"\r\n        fixed=\"top\"\r\n        size=\"small\"\r\n        inverted\r\n        color=\"b92c2c\"\r\n      >\r\n        <Menu.Header className=\"logo-nav-bar\">\r\n          <Image src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </Menu.Header>\r\n        <Menu.Item className=\"logo-nav-bar\" fitted=\"horizontally\">\r\n          {/* TODO: Make that centered and remove right border */}\r\n          <h1 id=\"vision\">We make vines talk</h1>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Grid>\r\n        <Grid container id=\"sensors-grid\" textAlign=\"center\" centered>\r\n          <Grid.Row columns={3}>\r\n            <Grid.Column>\r\n              <HumiditySensor />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <TemperatureSensor />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <MoistureSensor />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <MildewIndex />\r\n          </Grid.Row>\r\n          <Divider />\r\n          <Grid.Row>\r\n            <MildewChart/>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}