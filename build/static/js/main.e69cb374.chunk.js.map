{"version":3,"sources":["graphics/logo_white.png","services/Fetch.js","components/CustomizedChartLabel.jsx","components/MildewChart.jsx","components/GaugeWrapper.jsx","components/HumiditySensor.jsx","components/TemperatureSensor.jsx","components/MoistureSensor.jsx","components/RadialChart.jsx","components/RadialChartWrapper.jsx","components/MildewIndex.jsx","components/BlackRootIndex.jsx","components/DiseasesPredictionsChart.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Fetch","url","settings","Promise","resolve","reject","fetch","concat","Object","assign","credentials","then","response","catch","error","CustomizedChartLabel","_this$props","this","props","x","y","value","middleValue","react_default","a","createElement","dy","dx","fill","fillColor","fontSize","textAnchor","arguments","length","undefined","PureComponent","MildewChart","_React$Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","titleProps","index","newIndex","state","activeIndex","setState","data","Date","Black root index","Mildew index","inherits","createClass","key","_this2","setInterval","fetchDiseasesPredictions","_this3","redirect","json","status","_this$state","Accordion","styled","Title","active","onClick","Icon","name","Content","es6","width","height","strokeDasharray","dataKey","label","angle","position","type","stroke","components_CustomizedChartLabel","React","Component","GaugeWrapper","_this$props$header","header","_this$props$height","_this$props$width","_this$props$value","className","_this$props$color","color","_this$props$min","min","_this$props$max","max","valueFormatter","Card","raised","fluid","textAlign","Header","Gauge_default","valueLabelStyle","HumiditySensor","fetchHumidity","colorHex","getHexColor","components_GaugeWrapper","v","TemperatureSensor","fetchTemperature","MoistureSensor","fetchMoisture","RadialChart","componentWillReceiveProps","nextProps","series","_this$props$startAngl","startAngle","_this$props$endAngle","endAngle","_this$props$valueFont","valueFontSize","options","plotOptions","radialBar","track","background","strokeWidth","margin","shadow","enabled","top","left","opacity","blur","dataLabels","show","offsetY","colors","gradient","shade","shadeIntensity","inverseColors","stops","id","react_apexcharts_min_default","RadialChartWrapper","components_RadialChart","MildewIndex","fetchMildewData","components_RadialChartWrapper","BlackRootIndex","fetchBlackRootData","chartOptions","chart","toolbar","curve","title","text","style","align","grid","borderColor","row","markers","size","xaxis","categories","getDate","getMonth","getFullYear","yaxis","legend","horizontalAlign","floating","offsetX","DiseasesPredictionsChart","fetchIndexes","App","Container","Menu","fixed","inverted","Image","src","logo","alt","Item","fitted","Grid","container","centered","Row","columns","Column","HumiditySensor_HumiditySensor","TemperatureSensor_TemperatureSensor","MoistureSensor_MoistureSensor","components_MildewIndex","components_BlackRootIndex","Divider","MildewChart_MildewChart","components_DiseasesPredictionsChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e69cb374.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.84bb471c.png\";","class Fetch {\n  static redirect(url, settings) {\n    return new Promise((resolve, reject) => {\n      fetch(\n        `http://localhost:8000${url}`,\n        Object.assign(\n          {\n            credentials: \"same-origin\"\n          },\n          settings\n        )\n      )\n        .then(response => {\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n}\n\nexport { Fetch };\n","import React, { PureComponent } from \"react\";\n\nclass CustomizedChartLabel extends PureComponent {\n  static fillColor(value, middleValue = 55) {\n    if (value < 13) {\n      return \"blue\";\n    }\n    if (value < middleValue) {\n      return \"green\";\n    }\n    return \"red\";\n  }\n\n  render() {\n    const { x, y, value, middleValue } = this.props;\n\n    return (\n      <text\n        x={x}\n        y={y}\n        dy={-9}\n        dx={-5}\n        fill={CustomizedChartLabel.fillColor(value, middleValue)}\n        fontSize={13}\n        textAnchor=\"middle\"\n      >\n        {value}\n      </text>\n    );\n  }\n}\n\nexport default CustomizedChartLabel;\n","import React from \"react\";\nimport { Fetch } from \"../services/Fetch\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Tooltip,\n  XAxis,\n  YAxis\n} from \"recharts\";\nimport { Accordion, Icon } from \"semantic-ui-react\";\nimport CustomizedChartLabel from \"./CustomizedChartLabel\";\n\nexport class MildewChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        { \"Date\": \"17.06.2019\", \"Black root index\": 40.0, \"Mildew index\": 84.15},\n        { \"Date\": \"18.06.2019\", \"Black root index\": 0.1, \"Mildew index\": 79.15},\n        { \"Date\": \"19.06.2019\", \"Black root index\": 5, \"Mildew index\": 80.4},\n        { \"Date\": \"20.06.2019\", \"Black root index\": 13, \"Mildew index\": 83.25},\n        { \"Date\": \"21.06.2019\", \"Black root index\": 24, \"Mildew index\": 79.75}\n      ]\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchDiseasesPredictions();\n    }, 3000);\n  }\n\n  fetchDiseasesPredictions() {\n    Fetch.redirect(\"/data/diseasesPredictions\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.status !== 403) {\n          this.setState({\n            value: data\n          });\n        }\n      });\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { data, activeIndex } = this.state;\n    return (\n      <Accordion styled>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          History Data\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <LineChart width={550} height={350} data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"Date\" height={50} />\n            <YAxis\n              label={{\n                value: \"Diseases predictions\",\n                angle: -90,\n                position: \"insideLeft\",\n                textAnchor: \"middle\"\n              }}\n            />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"natural\"\n              dataKey=\"Black root index\"\n              stroke=\"#653887\"\n              label={<CustomizedChartLabel middleValue={33} />}\n            />\n            <Line\n              type=\"natural\"\n              dataKey=\"Mildew index\"\n              stroke=\"#134857\"\n              label={<CustomizedChartLabel />}\n            />\n          </LineChart>\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n\nexport default MildewChart;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport Gauge from \"react-svg-gauge\";\n\nclass GaugeWrapper extends React.PureComponent {\n  render() {\n    const {\n      header = \"DATA\",\n      height = 160,\n      width = 200,\n      value = 0,\n      className,\n      color = \"green\",\n      min = 0,\n      max = 100,\n      valueFormatter\n    } = this.props;\n    return (\n      <Card raised fluid className={className}>\n        <Card.Content textAlign=\"center\">\n          <Card.Header>{header}</Card.Header>\n        </Card.Content>\n        <Card.Content fluid textAlign=\"center\">\n          <Gauge\n            value={value}\n            width={width}\n            height={height}\n            label=\"\"\n            color={color}\n            min={min}\n            max={max}\n            valueFormatter={valueFormatter}\n            valueLabelStyle={{ fontSize: \"24px\" }}\n          />\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default GaugeWrapper;\n","import React from \"react\";\nimport { Fetch } from \"../services/Fetch\";\nimport GaugeWrapper from \"./GaugeWrapper\";\n\nconst getHexColor = value => {\n  if (value < 49) {\n    return \"#77be47\";\n  }\n  if (value < 69) {\n    return \"#beba11\";\n  }\n  return \"#b42400\";\n};\n\nexport class HumiditySensor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchHumidity();\n    }, 3000);\n  }\n\n  fetchHumidity() {\n    Fetch.redirect(\"/data/humidity\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.status !== 403) {\n          this.setState({\n            value: data\n          });\n        }\n      });\n  }\n\n  render() {\n    const { value } = this.state;\n    const colorHex = `${getHexColor(value)}`;\n    return (\n      <GaugeWrapper\n        value={value}\n        width={200}\n        height={160}\n        header=\"HUMIDITY\"\n        color={colorHex}\n        min={0}\n        max={100}\n        valueFormatter={v => `${v}%`}\n      />\n    );\n  }\n}\n\nexport default HumiditySensor;\n","import React from \"react\";\nimport { Fetch } from \"../services/Fetch\";\nimport GaugeWrapper from \"./GaugeWrapper\";\n\nconst getHexColor = value => {\n  if (value < 13) {\n    return \"#00a191\";\n  }\n  if (value < 37) {\n    return \"#77be47\";\n  }\n  return \"#b42400\";\n};\n\nexport class TemperatureSensor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchTemperature();\n    }, 3000);\n  }\n\n  fetchTemperature() {\n    Fetch.redirect(\"/data/temperature\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.status !== 403) {\n          this.setState({\n            value: data\n          });\n        }\n      });\n  }\n\n  render() {\n    const { value } = this.state;\n    const colorHex = `${getHexColor(value)}`;\n    return (\n      <GaugeWrapper\n        value={value}\n        width={200}\n        height={160}\n        header=\"TEMPERATURE\"\n        color={colorHex}\n        min={-30}\n        max={60}\n        valueFormatter={v => `${v}°C`}\n      />\n    );\n  }\n}\n\nexport default TemperatureSensor;\n","import React from \"react\";\nimport { Fetch } from \"../services/Fetch\";\nimport GaugeWrapper from \"./GaugeWrapper\";\n\nconst getHexColor = value => {\n  if (value < 0.7) {\n    return \"#77be47\";\n  }\n  return \"#e79419\";\n};\n\nexport class MoistureSensor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchMoisture();\n    }, 3000);\n  }\n\n  fetchMoisture() {\n    Fetch.redirect(\"/data/moisture\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.status !== 403) {\n          this.setState({\n            value: data\n          });\n        }\n      });\n  }\n\n  render() {\n    const { value } = this.state;\n    const colorHex = `${getHexColor(value)}`;\n    return (\n      <GaugeWrapper\n        value={value}\n        width={200}\n        height={160}\n        header=\"MOISTURE\"\n        color={colorHex}\n        min={0}\n        max={1}\n      />\n    );\n  }\n}\n\nexport default MoistureSensor;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass RadialChart extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      startAngle = 0,\n      endAngle = 360,\n      value = 33,\n      height = 160,\n      valueFontSize = \"30px\"\n    } = this.props;\n    this.state = {\n      options: {\n        plotOptions: {\n          radialBar: {\n            startAngle,\n            endAngle,\n            track: {\n              background: \"#e7e7e7\",\n              strokeWidth: \"97%\",\n              margin: 5, // margin is in pixels\n              shadow: {\n                enabled: true,\n                top: 2,\n                left: 0,\n                color: \"#999\",\n                opacity: 1,\n                blur: 2\n              }\n            },\n            dataLabels: {\n              name: {\n                show: false\n              },\n              value: {\n                offsetY: 20,\n                fontSize: valueFontSize\n              }\n            }\n          }\n        },\n        fill: {\n          colors: [\n            data => {\n              // eslint-disable-next-line no-shadow\n              const { value } = data;\n              if (value < 33) {\n                return \"#73d33d\";\n              }\n              if (value < 77) {\n                return \"#b4c028\";\n              }\n              return \"#8a1d00\";\n            }\n          ],\n          type: \"gradient\",\n          gradient: {\n            shade: \"light\",\n            shadeIntensity: 0.2,\n            inverseColors: false,\n            stops: [0, 33, 77]\n          }\n        }\n      },\n      series: [value],\n      height\n    };\n  }\n\n  componentWillReceiveProps = nextProps => {\n    const { value } = nextProps;\n    this.setState({\n      series: [value === undefined ? 0 : value]\n    });\n  };\n\n  render() {\n    const { series, options, height } = this.state;\n    return (\n      <div id=\"chart\">\n        <ReactApexChart\n          options={options}\n          series={series}\n          type=\"radialBar\"\n          height={height}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RadialChart;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport RadialChart from \"./RadialChart\";\n\nclass RadialChartWrapper extends React.PureComponent {\n  render() {\n    const {\n      header,\n      endAngle,\n      height,\n      startAngle,\n      value,\n      valueFontSize,\n      className\n    } = this.props;\n    return (\n      <Card raised fluid className={className}>\n        <Card.Content>\n          <Card.Header>{header}</Card.Header>\n        </Card.Content>\n        <Card.Content fluid>\n          <RadialChart\n            startAngle={startAngle}\n            endAngle={endAngle}\n            height={height}\n            value={value}\n            valueFontSize={valueFontSize}\n          />\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default RadialChartWrapper;\n","import React from \"react\";\nimport RadialChartWrapper from \"./RadialChartWrapper\";\nimport { Fetch } from \"../services/Fetch\";\n\nclass MildewIndex extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: 0\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchMildewData();\n    }, 3000);\n  }\n\n  fetchMildewData() {\n    Fetch.redirect(\"/data/downyMildewIndex\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.status !== 403) {\n          this.setState({\n            value: data\n          });\n        }\n      });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <RadialChartWrapper\n        className=\"mildew\"\n        header=\"DOWNY MILDEW RISK\"\n        // startAngle={0}\n        // endAngle={180}\n        value={value}\n        height={350}\n        valueFontSize=\"48px\"\n      />\n    );\n  }\n}\n\nexport default MildewIndex;\n","import React from \"react\";\nimport RadialChartWrapper from \"./RadialChartWrapper\";\nimport { Fetch } from \"../services/Fetch\";\n\nclass BlackRootIndex extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: 0\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchBlackRootData();\n    }, 3000);\n  }\n\n  fetchBlackRootData() {\n    Fetch.redirect(\"/data/blackRotIndex\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.status !== 403) {\n          this.setState({\n            value: data\n          });\n        }\n      });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <RadialChartWrapper\n        className=\"blackRoot\"\n        header=\"BLACK ROOT RISK\"\n        // startAngle={0}\n        // endAngle={180}\n        value={value}\n        height={350}\n        valueFontSize=\"48px\"\n      />\n    );\n  }\n}\n\nexport default BlackRootIndex;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Fetch } from \"../services/Fetch\";\n\nconst THREE_HOURS = 10800000;\nconst chartOptions = {\n  chart: {\n    id: \"mychart\",\n    shadow: {\n      enabled: true,\n      color: \"#000\",\n      top: 18,\n      left: 7,\n      blur: 10,\n      opacity: 1\n    },\n    toolbar: {\n      show: false\n    }\n  },\n  colors: [\"#77B6EA\", \"#545454\"],\n  dataLabels: {\n    enabled: true\n  },\n  stroke: {\n    curve: \"smooth\"\n  },\n  title: {\n    text: \"Diseases predictions\",\n    style: {\n      fontSize: \"26px\"\n    },\n    align: \"left\"\n  },\n  grid: {\n    borderColor: \"#e7e7e7\",\n    row: {\n      colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n      opacity: 0.5\n    }\n  },\n  markers: {\n    size: 6\n  },\n  xaxis: {\n    // Awful, but working as we want (:\n    categories: [\n      `${new Date().getDate()}.${new Date().getMonth() +\n        1}.${new Date().getFullYear()}`,\n      `${new Date().getDate() + 1}.${new Date().getMonth() +\n        1}.${new Date().getFullYear()}`,\n      `${new Date().getDate() + 2}.${new Date().getMonth() +\n        1}.${new Date().getFullYear()}`,\n      `${new Date().getDate() + 3}.${new Date().getMonth() +\n        1}.${new Date().getFullYear()}`,\n      `${new Date().getDate() + 4}.${new Date().getMonth() +\n        1}.${new Date().getFullYear()}`\n    ],\n    title: {\n      text: \"Date\"\n    }\n  },\n  yaxis: {\n    min: 0,\n    max: 100\n  },\n  legend: {\n    position: \"top\",\n    horizontalAlign: \"right\",\n    floating: true,\n    offsetY: -25,\n    offsetX: -5\n  }\n};\n\nexport class DiseasesPredictionsChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: [\n        {\n          name: \"Mildew Index\",\n          data: [54, 89, 33, 76, 62]\n        },\n        {\n          name: \"Black Rot Index\",\n          data: [12, 21, 44, 58, 87]\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.fetchIndexes();\n    }, THREE_HOURS);\n  }\n\n  fetchIndexes() {\n    Fetch.redirect(\"/data/diseasesPredictions\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.status !== 403) {\n          this.setState({\n            series: data\n          });\n        }\n      });\n  }\n\n  render() {\n    const { series } = this.state;\n\n    return (\n      <div id=\"chart\">\n        <ReactApexChart\n          options={chartOptions}\n          series={series}\n          type=\"line\"\n          height=\"400\"\n          width=\"700\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default DiseasesPredictionsChart;\n","import React from \"react\";\nimport {\n  Container,\n  Image,\n  Grid,\n  Divider,\n  Menu,\n  Card,\n  Accordion,\n  Icon\n} from \"semantic-ui-react\";\nimport logo from \"./graphics/logo_white.png\";\nimport \"./css/App.css\";\nimport { MildewChart } from \"./components/MildewChart\";\nimport { HumiditySensor } from \"./components/HumiditySensor\";\nimport { TemperatureSensor } from \"./components/TemperatureSensor\";\nimport { MoistureSensor } from \"./components/MoistureSensor\";\nimport MildewIndex from \"./components/MildewIndex\";\nimport BlackRootIndex from \"./components/BlackRootIndex\";\nimport DiseasesPredictionsChart from \"./components/DiseasesPredictionsChart\";\n\nfunction App() {\n  return (\n    <Container>\n      <Menu\n        className=\"nav-bar\"\n        fixed=\"top\"\n        size=\"small\"\n        inverted\n        color=\"b92c2c\"\n      >\n        <Menu.Header className=\"logo-nav-bar\">\n          <Image src={logo} className=\"App-logo\" alt=\"logo\" />\n        </Menu.Header>\n        <Menu.Item className=\"logo-nav-bar\" fitted=\"horizontally\">\n          {/* TODO: Make that centered and remove right border */}\n          <h1 id=\"vision\">We make vines talk</h1>\n        </Menu.Item>\n      </Menu>\n      <Grid>\n        <Grid container id=\"sensors-grid\" textAlign=\"center\" centered>\n          <Grid.Row columns={3}>\n            <Grid.Column>\n              <HumiditySensor />\n            </Grid.Column>\n            <Grid.Column>\n              <TemperatureSensor />\n            </Grid.Column>\n            <Grid.Column>\n              <MoistureSensor />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <MildewIndex />\n            </Grid.Column>\n            <Grid.Column>\n              <BlackRootIndex />\n            </Grid.Column>\n          </Grid.Row>\n          <Divider />\n          <Grid.Row>\n            <MildewChart/>\n          </Grid.Row>\n          <Divider />\n          <Grid.Row>\n            <DiseasesPredictionsChart/>\n          </Grid.Row>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}